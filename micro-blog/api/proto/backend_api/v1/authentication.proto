syntax = "proto3";

package backend_api.v1;

import "gnostic/openapi/v3/annotations.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "user_service/v1/user.proto";

option go_package = "github.com/devexps/go-examples/micro-blog/api/gen/go/backend_api/v1;v1";
option java_multiple_files = true;
option java_package = "dev.gomicro.api.backend_api.v1";

option (gnostic.openapi.v3.document) = {
  info: {
    title: "User backend login authentication interface";
    description: "User backend login authentication";
    version: "1.0";
  }
};

// The Authentication service definition.
service AuthenticationService {
  // Login api
  rpc Login (LoginRequest) returns (LoginReply) {
    option (google.api.http) = {
      post: "/admin/v1/login"
      body: "*"
    };
  }

  // Logout api
  rpc Logout (LogoutRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/admin/v1/logout"
      body: "*"
    };
  }

  // GetMe api
  rpc GetMe (google.protobuf.Empty) returns (user_service.v1.User) {
    option (google.api.http) = {
      get: "/admin/v1/me"
    };
  }
}

message RegisterRequest {
  user_service.v1.User user = 1;
}

message RegisterReply {
  string id = 1;
  string userName = 2;
  string token = 3;
}

message LoginRequest {
  string userName = 1;
  string password = 2;
}

message LoginReply {
  string id = 1;
  string userName = 2;
  string token = 3;
}

message LogoutRequest {
}